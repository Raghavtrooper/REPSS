import streamlit as st
import os
import shutil
import time # Still needed for st.cache_resource, but not for reset_triggered_timestamp
from langchain_community.embeddings import SentenceTransformerEmbeddings
from langchain_community.vectorstores import Chroma

# Import configuration from shared module
from shared.config import CHROMA_DB_DIR

@st.cache_resource(show_spinner=False)
def get_vectorstore():
    """
    Initializes or loads the ChromaDB vector store.
    It expects the ChromaDB to be pre-generated by the ETL process (main_etl.py).
    It will warn the user if the database is not found or is empty.
    The reset functionality has been removed, as database resets are handled by the ETL script.
    """
    embedding_function = SentenceTransformerEmbeddings(model_name="all-MiniLM-L6-v2")

    # Removed the 'reset_triggered_timestamp' logic as database resets are handled externally.
    
    if not os.path.exists(CHROMA_DB_DIR) or not os.listdir(CHROMA_DB_DIR):
        st.error(f"ChromaDB not found or is empty at '{CHROMA_DB_DIR}'.")
        st.markdown(
            "**Please run the `python -m etl.main_etl` script first "
            "to create the ChromaDB before running this Streamlit application.**"
        )
        st.stop()
    
    st.info("Loading existing vector store from disk...")
    try:
        vectorstore = Chroma(persist_directory=CHROMA_DB_DIR, embedding_function=embedding_function)
        
        ids = vectorstore.get(include=[])['ids']
        if not ids:
            st.warning("Loaded vector store appears to be empty. This might be a problem. "
                         "Please run `python -m etl.main_etl` again. "
                         "If errors persist, stop the app (Ctrl+C) and manually delete the 'chroma_db' folder before rerunning.")
        else:
            st.success(f"Vector store loaded successfully with {len(ids)} documents!")
    except Exception as e:
        st.error(f"Error loading ChromaDB from '{CHROMA_DB_DIR}'. It might be corrupted or in an unexpected format. {e}")
        st.markdown(
            "**Please try running `python -m etl.main_etl` again, or manually delete the `chroma_db` folder.**"
        )
        st.stop()

    return vectorstore
